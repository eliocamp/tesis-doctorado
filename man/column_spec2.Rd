% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/kableExtra.R
\name{column_spec2}
\alias{column_spec2}
\alias{kbl2}
\title{Helpers for kableExtra}
\usage{
column_spec2(kable_input, columns, ...)

kbl2(data, ...)
}
\arguments{
\item{kable_input}{a kable object created by \code{\link[=kbl2]{kbl2()}} (not \code{\link[kableExtra:kbl]{kableExtra::kbl()}}).}

\item{columns}{a vector indicating which column(s) to be selected.}

\item{...}{other arguments to \link[kableExtra:column_spec]{kableExtra::column_spec} with support for
special symbols. See Details.

\code{spec_color2} works the same as \code{\link[kableExtra:spec_color]{kableExtra::spec_color()}} with the difference
that the \code{option} argument can be a palette function returned by
\code{grDevices::colorRampPalette()}.

For \code{column_spec2()}, the arguments in \code{...} can use two
especial symbols. \code{.table} will refer to the original data.frame object,
and \code{.col} will refer to each column. The arguments will be evaluated once per
column. This all means that if you have a function \code{colour_function} that takes
numeric argument and returns assigns a colour to each element, then
\verb{... \%>\% column_spec2(1:2, colour = colour_function(.table[[.col]])} will
colourise the first and second column.

For \code{column_spec2()} to work, the table must be generated with \code{kbl2()}, not
\code{kableExtra::kbl()}. Also bear in mind that some kableExtra operations will remove
the formating necesary for it to work, so just to be safe, use \code{column_spec2()} right after \code{kbl2()}.}

\item{data}{a data.frame-like object.}
}
\description{
Replacements for kableExtra functions that make it easier to directly pipe
resutls
}
